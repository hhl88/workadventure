version: "3"
services:
  reverse-proxy:
    image: traefik:v2.0
    command:
      - --api.insecure=true
      - --providers.docker
      - --entryPoints.web.address=:80
      - --entryPoints.websecure.address=:443
    ports:
      - "80:80"
      - "443:443"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    depends_on:
      - back
      - front
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped

  front:
    image: thecodingmachine/nodejs:14
    build:
      context: ../..
      dockerfile: ./front/Dockerfile
    environment:
      DEBUG_MODE: "$DEBUG_MODE"
      SEEME_SECURE_CONNECTION: "$SEEME_SECURE_CONNECTION"
      MEETING_PLATFORM: $MEETING_PLATFORM
      SEEME_URL: $SEEME_URL
      JITSI_URL: $JITSI_URL
      JITSI_PRIVATE_MODE: "$JITSI_PRIVATE_MODE"
      STARTUP_COMMAND_1: ./templater.sh
      STARTUP_COMMAND_2: yarn install
      TURN_SERVER: "${TURN_SERVER}"
      DISABLE_NOTIFICATIONS: "$DISABLE_NOTIFICATIONS"
      SKIP_RENDER_OPTIMIZATIONS: "$SKIP_RENDER_OPTIMIZATIONS"
      # Use TURN_USER/TURN_PASSWORD if your Coturn server is secured via hard coded credentials.
      # Advice: you should instead use Coturn REST API along the TURN_STATIC_AUTH_SECRET in the Back container
      TURN_USER: "${TURN_USER}"
      TURN_PASSWORD: "${TURN_PASSWORD}"
      START_ROOM_URL: "${START_ROOM_URL}"
      MAX_PER_GROUP: "$MAX_PER_GROUP"
      MAX_USERNAME_LENGTH: "$MAX_USERNAME_LENGTH"
    command: yarn run start
    volumes:
      - ./front:/usr/src/app
    labels:
      - "traefik.http.routers.front.rule=Host(`play.${DOMAIN}`)"
      - "traefik.http.routers.front.entryPoints=web,traefik"
      - "traefik.http.services.front.loadbalancer.server.port=80"
      - "traefik.http.routers.front-ssl.rule=Host(`play.${DOMAIN}`)"
      - "traefik.http.routers.front-ssl.entryPoints=websecure"
      - "traefik.http.routers.front-ssl.tls=true"
      - "traefik.http.routers.front-ssl.service=front"
      - "traefik.http.routers.front-ssl.tls.certresolver=myresolver"
    restart: unless-stopped

  pusher:
    build:
      context: ../..
      dockerfile: ./pusher/Dockerfile
    environment:
      DEBUG: "socket:*"
      STARTUP_COMMAND_1: yarn install
      SECRET_JITSI_KEY: "$SECRET_JITSI_KEY"
      SECRET_KEY: "$SECRET_KEY"
      ADMIN_API_TOKEN: "$ADMIN_API_TOKEN"
      API_URL: back:50051
      JITSI_URL: $JITSI_URL
      JITSI_ISS: $JITSI_ISS
    volumes:
      - ./pusher:/usr/src/app
    labels:
      - "traefik.http.routers.pusher.rule=Host(`pusher.${DOMAIN}`)"
      - "traefik.http.routers.pusher.entryPoints=web"
      - "traefik.http.services.pusher.loadbalancer.server.port=8080"
      - "traefik.http.routers.pusher-ssl.rule=Host(`pusher.${DOMAIN}`)"
      - "traefik.http.routers.pusher-ssl.entryPoints=websecure"
      - "traefik.http.routers.pusher-ssl.tls=true"
      - "traefik.http.routers.pusher-ssl.service=pusher"
      - "traefik.http.routers.front-ssl.tls.certresolver=myresolver"
    restart: unless-stopped
  # maps:
  # image: thecodingmachine/nodejs:12-apache
  # environment:
  #   DEBUG_MODE: "$DEBUG_MODE"
  #   HOST: "0.0.0.0"
  #   NODE_ENV: development
  #   #APACHE_DOCUMENT_ROOT: dist/
  #   #APACHE_EXTENSIONS: headers
  #   #APACHE_EXTENSION_HEADERS: 1
  #   STARTUP_COMMAND_0: sudo a2enmod headers
  #   STARTUP_COMMAND_1: yarn install
  #   STARTUP_COMMAND_2: yarn run dev &
  # volumes:
  #   - ./maps:/var/www/html
  # labels:
  #   - "traefik.http.routers.maps.rule=Host(`maps.${DOMAIN}`)"
  #   - "traefik.http.routers.maps.entryPoints=web,traefik"
  #   - "traefik.http.services.maps.loadbalancer.server.port=80"
  #   - "traefik.http.routers.maps-ssl.rule=Host(`maps.${DOMAIN}`)"
  #   - "traefik.http.routers.maps-ssl.entryPoints=websecure"
  #   - "traefik.http.routers.maps-ssl.tls=true"
  #   - "traefik.http.routers.maps-ssl.service=maps"

  back:
    build:
      context: ../..
      dockerfile: ./back/Dockerfile
    command: yarn run runprod
    environment:
      STARTUP_COMMAND_1: yarn install
      SECRET_JITSI_KEY: "$SECRET_JITSI_KEY"
      ALLOW_ARTILLERY: "true"
      ADMIN_API_TOKEN: "$ADMIN_API_TOKEN"
      JITSI_URL: $JITSI_URL
      JITSI_ISS: $JITSI_ISS
      MAX_PER_GROUP: "MAX_PER_GROUP"
      ADMIN_API_URL: $ADMIN_API_URL
      ADMIN_API_TOKEN: $ADMIN_API_TOKEN
    volumes:
      - ./back:/usr/src/app
    labels:
      - "traefik.http.routers.back.rule=Host(`api.${DOMAIN}`)"
      - "traefik.http.routers.back.entryPoints=web"
      - "traefik.http.services.back.loadbalancer.server.port=8080"
      - "traefik.http.routers.back-ssl.rule=Host(`api.${DOMAIN}`)"
      - "traefik.http.routers.back-ssl.entryPoints=websecure"
      - "traefik.http.routers.back-ssl.tls=true"
      - "traefik.http.routers.back-ssl.service=back"
      - "traefik.http.routers.back-ssl.tls.certresolver=myresolver"
    restart: unless-stopped
 #  uploader:
 #    image: thecodingmachine/nodejs:12
 #   command: yarn dev
 #   #command: yarn run profile
 #   environment:
 #     DEBUG: "*"
 #     STARTUP_COMMAND_1: yarn install
 #   volumes:
 #     - ./uploader:/usr/src/app
 #    labels:
 #     - "traefik.http.routers.uploader.rule=Host(`uploader.haile.com`)"
 #     - "traefik.http.routers.uploader.entryPoints=web"
 #     - "traefik.http.services.uploader.loadbalancer.server.port=8080"
 #     - "traefik.http.routers.uploader-ssl.rule=Host(`uploader.haile.com`)"
 #     - "traefik.http.routers.uploader-ssl.entryPoints=websecure"
 #     - "traefik.http.routers.uploader-ssl.tls=true"
 #     - "traefik.http.routers.uploader-ssl.service=uploader"

        #messages:
    #image: thecodingmachine/nodejs:14
    # image: thecodingmachine/workadventure-back-base:latest
    # environment:
      #STARTUP_COMMAND_0: sudo apt-get install -y inotify-tools
      #   STARTUP_COMMAND_1: yarn install
      # STARTUP_COMMAND_2: yarn run proto:watch
      #  volumes:
      # - ./messages:/usr/src/app
      # - ./back:/usr/src/back
      # - ./front:/usr/src/front
      # - ./pusher:/usr/src/pusher

#  coturn:
#    image: coturn/coturn:4.5.2
#    command:
#      - turnserver
#      #- -c=/etc/coturn/turnserver.conf
#      - --log-file=stdout
#      - --external-ip=$$(detect-external-ip)
#      - --listening-port=3478
#      - --min-port=10000
#      - --max-port=10010
#      - --tls-listening-port=5349
#      - --listening-ip=0.0.0.0
#      - --realm=coturn.haile.com
#      - --server-name=coturn.haile.com
#      - --lt-cred-mech
#      # Enable Coturn "REST API" to validate temporary passwords.
#      #- --use-auth-secret
#      #- --static-auth-secret=SomeStaticAuthSecret
#      #- --userdb=/var/lib/turn/turndb
#      - --user=workadventure:WorkAdventure123
#      # use real-valid certificate/privatekey files
#      #- --cert=/root/letsencrypt/fullchain.pem
#      #- --pkey=/root/letsencrypt/privkey.pem
#    network_mode: host
